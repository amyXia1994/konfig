"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis


schema ApplicationRevision:
    """ ApplicationRevision is the Schema for the ApplicationRevision API

    Attributes
    ----------
    apiVersion : str, default is "core.oam.dev/v1alpha2", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ApplicationRevision", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationRevisionSpec, default is Undefined, optional
        spec
    """


    apiVersion: "core.oam.dev/v1alpha2" = "core.oam.dev/v1alpha2"

    kind: "ApplicationRevision" = "ApplicationRevision"

    metadata?: apis.ObjectMeta

    spec?: CoreOamDevV1alpha2ApplicationRevisionSpec


schema CoreOamDevV1alpha2ApplicationRevisionSpec:
    """ ApplicationRevisionSpec is the spec of ApplicationRevision

    Attributes
    ----------
    applicationConfiguration : any, default is Undefined, required
         ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.
    componentDefinitions : {str:CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnon}, default is Undefined, optional
         ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application
    components : [CoreOamDevV1alpha2ApplicationRevisionSpecComponentsItems0], default is Undefined, optional
        components
    scopeDefinitions : {str:CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnon}, default is Undefined, optional
         ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application
    traitDefinitions : {str:CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnon}, default is Undefined, optional
         TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application
    workloadDefinitions : {str:CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnon}, default is Undefined, optional
         WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application
    application : CoreOamDevV1alpha2ApplicationRevisionSpecApplication, default is Undefined, required
        application
    """


    applicationConfiguration: any

    componentDefinitions?: {str:CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnon}

    components?: [CoreOamDevV1alpha2ApplicationRevisionSpecComponentsItems0]

    scopeDefinitions?: {str:CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnon}

    traitDefinitions?: {str:CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnon}

    workloadDefinitions?: {str:CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnon}

    application: CoreOamDevV1alpha2ApplicationRevisionSpecApplication


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplication:
    """ Application records the snapshot of the created/modified Application

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpec

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatus


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpec:
    """ ApplicationSpec is the spec of Application

    Attributes
    ----------
    components : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecComponentsItems0], default is Undefined, required
        components
    rolloutPlan : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlan, default is Undefined, optional
        rollout plan
    """


    components: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecComponentsItems0]

    rolloutPlan?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlan


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecComponentsItems0:
    """ ApplicationComponent describe the component of application

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    scopes : {str:str}, default is Undefined, optional
         scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
    settings : any, default is Undefined, optional
        settings
    traits : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecComponentsItems0TraitsItems0], default is Undefined, optional
         Traits define the trait of one component, the type must be array to keep the order.
    $type : str, default is Undefined, required
        type
    """


    name: str

    scopes?: {str:str}

    settings?: any

    traits?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecComponentsItems0TraitsItems0]

    $type: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecComponentsItems0TraitsItems0:
    """ ApplicationTrait defines the trait of application

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    properties : any, default is Undefined, optional
        properties
    """


    name: str

    properties?: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlan:
    """ RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved

    Attributes
    ----------
    batchPartition : int, default is Undefined, optional
         All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches
    canaryMetric : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0], default is Undefined, optional
         CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process
    numBatches : int, default is Undefined, optional
         The number of batches, default = 1
    paused : bool, default is Undefined, optional
         Paused the rollout, default is false
    rolloutBatches : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0], default is Undefined, optional
         The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty
    rolloutStrategy : str, default is Undefined, optional
         RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType
    rolloutWebhooks : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutWebhooksItems0], default is Undefined, optional
         RolloutWebhooks provide a way for the rollout to interact with an external process
    targetSize : int, default is Undefined, optional
         The size of the target resource. The default is the same as the size of the source resource.
    """


    batchPartition?: int

    canaryMetric?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0]

    numBatches?: int

    paused?: bool

    rolloutBatches?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0]

    rolloutStrategy?: str

    rolloutWebhooks?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutWebhooksItems0]

    targetSize?: int


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0:
    """ CanaryMetric holds the reference to metrics used for canary analysis

    Attributes
    ----------
    interval : str, default is Undefined, optional
         Interval represents the windows size
    metricsRange : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0MetricsRange, default is Undefined, optional
        metrics range
    name : str, default is Undefined, required
         Name of the metric
    templateRef : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0TemplateRef, default is Undefined, optional
        template ref
    """


    interval?: str

    metricsRange?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0MetricsRange

    name: str

    templateRef?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0TemplateRef


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0MetricsRange:
    """ Range value accepted for this metric

    Attributes
    ----------
    max : int, default is Undefined, optional
         Maximum value
    min : int, default is Undefined, optional
         Minimum value
    """


    max?: int

    min?: int


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanCanaryMetricItems0TemplateRef:
    """ TemplateRef references a metric template object

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0:
    """ RolloutBatch is used to describe how the each batch rollout should be

    Attributes
    ----------
    batchRolloutWebhooks : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0BatchRolloutWebhooksItems0], default is Undefined, optional
         RolloutWebhooks provides a way for the batch rollout to interact with an external process
    canaryMetric : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0], default is Undefined, optional
         CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch
    instanceInterval : int, default is Undefined, optional
         The wait time, in seconds, between instances upgrades, default = 0
    maxUnavailable : int, default is Undefined, optional
         MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0
    podList : [str], default is Undefined, optional
         The list of Pods to get upgraded it is mutually exclusive with the Replicas field
    replicas : int, default is Undefined, optional
         Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field
    """


    batchRolloutWebhooks?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0BatchRolloutWebhooksItems0]

    canaryMetric?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0]

    instanceInterval?: int

    maxUnavailable?: int

    podList?: [str]

    replicas?: int


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0BatchRolloutWebhooksItems0:
    """ RolloutWebhook holds the reference to external checks used for canary analysis

    Attributes
    ----------
    expectedStatus : [int], default is Undefined, optional
         ExpectedStatus contains all the expected http status code that we will accept as success
    metadata : {str:str}, default is Undefined, optional
         Metadata (key-value pairs) for this webhook
    method : str, default is Undefined, optional
         Method the HTTP call method, default is POST
    name : str, default is Undefined, required
         Name of this webhook
    $type : str, default is Undefined, required
         Type of this webhook
    url : str, default is Undefined, required
         URL address of this webhook
    """


    expectedStatus?: [int]

    metadata?: {str:str}

    method?: str

    name: str

    $type: str

    url: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0:
    """ CanaryMetric holds the reference to metrics used for canary analysis

    Attributes
    ----------
    interval : str, default is Undefined, optional
         Interval represents the windows size
    metricsRange : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0MetricsRange, default is Undefined, optional
        metrics range
    name : str, default is Undefined, required
         Name of the metric
    templateRef : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0TemplateRef, default is Undefined, optional
        template ref
    """


    interval?: str

    metricsRange?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0MetricsRange

    name: str

    templateRef?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0TemplateRef


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0MetricsRange:
    """ Range value accepted for this metric

    Attributes
    ----------
    max : int, default is Undefined, optional
         Maximum value
    min : int, default is Undefined, optional
         Minimum value
    """


    max?: int

    min?: int


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0TemplateRef:
    """ TemplateRef references a metric template object

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationSpecRolloutPlanRolloutWebhooksItems0:
    """ RolloutWebhook holds the reference to external checks used for canary analysis

    Attributes
    ----------
    expectedStatus : [int], default is Undefined, optional
         ExpectedStatus contains all the expected http status code that we will accept as success
    metadata : {str:str}, default is Undefined, optional
         Metadata (key-value pairs) for this webhook
    method : str, default is Undefined, optional
         Method the HTTP call method, default is POST
    name : str, default is Undefined, required
         Name of this webhook
    $type : str, default is Undefined, required
         Type of this webhook
    url : str, default is Undefined, required
         URL address of this webhook
    """


    expectedStatus?: [int]

    metadata?: {str:str}

    method?: str

    name: str

    $type: str

    url: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatus:
    """ AppStatus defines the observed state of Application

    Attributes
    ----------
    appliedResources : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusAppliedResourcesItems0], default is Undefined, optional
         AppliedResources record the resources that the  workflow step apply.
    components : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusComponentsItems0], default is Undefined, optional
         Components record the related Components created by Application Controller
    conditions : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
         The generation observed by the application controller.
    policy : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusPolicyItems0], default is Undefined, optional
         PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
    services : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0], default is Undefined, optional
         Services record the status of the application services
    status : str, default is Undefined, optional
         ApplicationPhase is a label for the condition of an application at the current time
    latestRevision : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusLatestRevision, default is Undefined, optional
        latest revision
    workflow : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflow, default is Undefined, optional
        workflow
    """


    appliedResources?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusAppliedResourcesItems0]

    components?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusComponentsItems0]

    conditions?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusConditionsItems0]

    observedGeneration?: int

    policy?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusPolicyItems0]

    services?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0]

    status?: str

    latestRevision?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusLatestRevision

    workflow?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflow


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusAppliedResourcesItems0:
    """ ClusterObjectReference defines the object reference with cluster.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    cluster : str, default is Undefined, optional
        cluster
    creator : str, default is Undefined, optional
        creator
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    cluster?: str

    creator?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusComponentsItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusLatestRevision:
    """ LatestRevision of the application configuration it generates

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusPolicyItems0:
    """ PolicyStatus records the status of policy Deprecated

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    status : any, default is Undefined, optional
        status
    $type : str, default is Undefined, required
        type
    """


    name: str

    status?: any

    $type: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0:
    """ ApplicationComponentStatus record the health status of App component

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        cluster
    env : str, default is Undefined, optional
        env
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    scopes : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0ScopesItems0], default is Undefined, optional
        scopes
    traits : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0TraitsItems0], default is Undefined, optional
        traits
    workloadDefinition : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0WorkloadDefinition, default is Undefined, optional
        workload definition
    """


    cluster?: str

    env?: str

    healthy: bool

    message?: str

    name: str

    namespace?: str

    scopes?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0ScopesItems0]

    traits?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0TraitsItems0]

    workloadDefinition?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0WorkloadDefinition


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0ScopesItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0TraitsItems0:
    """ ApplicationTraitStatus records the trait health status

    Attributes
    ----------
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    $type : str, default is Undefined, required
        type
    """


    healthy: bool

    message?: str

    $type: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusServicesItems0WorkloadDefinition:
    """ WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    """


    apiVersion: str

    kind: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflow:
    """ Workflow record the status of workflow

    Attributes
    ----------
    appRevision : str, default is Undefined, optional
        app revision
    endTime : str, default is Undefined, optional
        end time
    finished : bool, default is Undefined, required
        finished
    message : str, default is Undefined, optional
        message
    mode : str, default is Undefined, required
        mode
    startTime : str, default is Undefined, optional
        start time
    status : str, default is Undefined, optional
         WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
    steps : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0], default is Undefined, optional
        steps
    suspend : bool, default is Undefined, required
        suspend
    suspendState : str, default is Undefined, optional
        suspend state
    terminated : bool, default is Undefined, required
        terminated
    contextBackend : CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowContextBackend, default is Undefined, optional
        context backend
    """


    appRevision?: str

    endTime?: str

    finished: bool

    message?: str

    mode: str

    startTime?: str

    status?: str

    steps?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0]

    suspend: bool

    suspendState?: str

    terminated: bool

    contextBackend?: CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowContextBackend


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowContextBackend:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0:
    """ WorkflowStepStatus record the status of a workflow step, include step status and subStep status

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    subSteps : [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    subSteps?: [CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0SubStepsItems0]

    $type?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0SubStepsItems0:
    """ StepStatus record the base status of workflow step, which could be workflow step or subStep

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    $type?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnon:
    """ ComponentDefinition is the Schema for the componentdefinitions API

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpec

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatus


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpec:
    """ ComponentDefinitionSpec defines the desired state of ComponentDefinition

    Attributes
    ----------
    childResourceKinds : [CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecChildResourceKindsItems0], default is Undefined, optional
         ChildResourceKinds are the list of GVK of the child resources this workload generates
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    podSpecPath : str, default is Undefined, optional
         PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.
    revisionLabel : str, default is Undefined, optional
         RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).
    schematic : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    status : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecStatus, default is Undefined, optional
        status
    workload : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkload, default is Undefined, required
        workload
    """


    childResourceKinds?: [CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecChildResourceKindsItems0]

    extension?: any

    podSpecPath?: str

    revisionLabel?: str

    schematic?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematic

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecStatus

    workload: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkload


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecChildResourceKindsItems0:
    """ A ChildResourceKind defines a child Kubernetes resource kind with a selector

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
         APIVersion of the child resource
    kind : str, default is Undefined, required
         Kind of the child resource
    selector : {str:str}, default is Undefined, optional
         Selector to select the child resources that the workload wants to expose to traits
    """


    apiVersion: str

    kind: str

    selector?: {str:str}


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the workload

    Attributes
    ----------
    cue : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecStatus:
    """ Status defines the custom health policy and status message for workload

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
         CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
         HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkload:
    """ Workload is a workload type descriptor

    Attributes
    ----------
    definition : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkloadDefinition, default is Undefined, optional
        definition
    $type : str, default is Undefined, optional
         Type ref to a WorkloadDefinition via name
    """


    definition?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkloadDefinition

    $type?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkloadDefinition:
    """ Definition mutually exclusive to workload.type, a embedded WorkloadDefinition

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    """


    apiVersion: str

    kind: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatus:
    """ ComponentDefinitionStatus is the status of ComponentDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    configMapRef : str, default is Undefined, optional
         ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatusLatestRevision


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentDefinitionsAnonStatusLatestRevision:
    """ LatestRevision of the component definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecComponentsItems0:
    """ RawComponent record raw component

    Attributes
    ----------
    raw : any, default is Undefined, required
        raw
    """


    raw: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnon:
    """ A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnonSpec, default is Undefined, optional
        spec
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnonSpec


schema CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnonSpec:
    """ A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.

    Attributes
    ----------
    allowComponentOverlap : bool, default is Undefined, required
         AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.
    definitionRef : CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnonSpecDefinitionRef, default is Undefined, required
        definition ref
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    workloadRefsPath : str, default is Undefined, optional
         WorkloadRefsPath indicates if/where a scope accepts workloadRef objects
    """


    allowComponentOverlap: bool

    definitionRef: CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnonSpecDefinitionRef

    extension?: any

    workloadRefsPath?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecScopeDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this scope kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnon:
    """ A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpec

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatus


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpec:
    """ A TraitDefinitionSpec defines the desired state of a TraitDefinition.

    Attributes
    ----------
    appliesToWorkloads : [str], default is Undefined, optional
         AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
    conflictsWith : [str], default is Undefined, optional
         ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: "service" # Trait definition name "services.k8s.io" # API resource/crd name "*.networking.k8s.io" # API group "labelSelector:foo=bar" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse
    definitionRef : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecDefinitionRef, default is Undefined, optional
        definition ref
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    podDisruptive : bool, default is Undefined, optional
         PodDisruptive specifies whether using the trait will cause the pod to restart or not.
    revisionEnabled : bool, default is Undefined, optional
         Revision indicates whether a trait is aware of component revision
    schematic : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    status : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecStatus, default is Undefined, optional
        status
    workloadRefPath : str, default is Undefined, optional
         WorkloadRefPath indicates where/if a trait accepts a workloadRef object
    """


    appliesToWorkloads?: [str]

    conflictsWith?: [str]

    definitionRef?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecDefinitionRef

    extension?: any

    podDisruptive?: bool

    revisionEnabled?: bool

    schematic?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematic

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecStatus

    workloadRefPath?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this trait kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the trait

    Attributes
    ----------
    cue : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonSpecStatus:
    """ Status defines the custom health policy and status message for trait

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
         CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
         HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatus:
    """ TraitDefinitionStatus is the status of TraitDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    configMapRef : str, default is Undefined, optional
         ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatusLatestRevision


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecTraitDefinitionsAnonStatusLatestRevision:
    """ LatestRevision of the trait definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnon:
    """ A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpec

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonStatus


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpec:
    """ A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.

    Attributes
    ----------
    childResourceKinds : [CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecChildResourceKindsItems0], default is Undefined, optional
         ChildResourceKinds are the list of GVK of the child resources this workload generates
    definitionRef : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecDefinitionRef, default is Undefined, required
        definition ref
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    podSpecPath : str, default is Undefined, optional
         PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.
    revisionLabel : str, default is Undefined, optional
         RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).
    schematic : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    status : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecStatus, default is Undefined, optional
        status
    """


    childResourceKinds?: [CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecChildResourceKindsItems0]

    definitionRef: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecDefinitionRef

    extension?: any

    podSpecPath?: str

    revisionLabel?: str

    schematic?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematic

    status?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecStatus


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecChildResourceKindsItems0:
    """ A ChildResourceKind defines a child Kubernetes resource kind with a selector

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
         APIVersion of the child resource
    kind : str, default is Undefined, required
         Kind of the child resource
    selector : {str:str}, default is Undefined, optional
         Selector to select the child resources that the workload wants to expose to traits
    """


    apiVersion: str

    kind: str

    selector?: {str:str}


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this workload kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the workload

    Attributes
    ----------
    cue : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonSpecStatus:
    """ Status defines the custom health policy and status message for workload

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
         CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
         HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonStatus:
    """ WorkloadDefinitionStatus is the status of WorkloadDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    """


    conditions?: [CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonStatusConditionsItems0]


schema CoreOamDevV1alpha2ApplicationRevisionSpecWorkloadDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str



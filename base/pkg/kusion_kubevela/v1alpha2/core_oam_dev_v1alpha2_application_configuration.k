"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis


schema ApplicationConfiguration:
    """ An ApplicationConfiguration represents an OAM application.

    Attributes
    ----------
    apiVersion : str, default is "core.oam.dev/v1alpha2", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ApplicationConfiguration", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationConfigurationSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1alpha2ApplicationConfigurationStatus, default is Undefined, optional
        status
    """


    

    apiVersion: "core.oam.dev/v1alpha2" = "core.oam.dev/v1alpha2"

    kind: "ApplicationConfiguration" = "ApplicationConfiguration"

    metadata?: apis.ObjectMeta

    spec?: CoreOamDevV1alpha2ApplicationConfigurationSpec

    status?: CoreOamDevV1alpha2ApplicationConfigurationStatus


schema CoreOamDevV1alpha2ApplicationConfigurationSpec:
    """ An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.

    Attributes
    ----------
    components : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0], default is Undefined, required
         Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
    """


    components: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0]


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0:
    """ An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.

    Attributes
    ----------
    componentName : str, default is Undefined, optional
         ComponentName specifies a component whose latest revision will be bind with ApplicationConfiguration. When the spec of the referenced component changes, ApplicationConfiguration will automatically migrate all trait affect from the prior revision to the new one. This is mutually exclusive with RevisionName.
    dataInputs : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0], default is Undefined, optional
         DataInputs specify the data input sinks into this component.
    dataOutputs : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0], default is Undefined, optional
         DataOutputs specify the data output sources from this component.
    parameterValues : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ParameterValuesItems0], default is Undefined, optional
         ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
    revisionName : str, default is Undefined, optional
         RevisionName of a specific component revision to which to bind ApplicationConfiguration. This is mutually exclusive with componentName.
    scopes : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ScopesItems0], default is Undefined, optional
         Scopes in which the specified component should exist.
    traits : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0], default is Undefined, optional
         Traits of the specified component.
    """


    componentName?: str

    dataInputs?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0]

    dataOutputs?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0]

    parameterValues?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ParameterValuesItems0]

    revisionName?: str

    scopes?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ScopesItems0]

    traits?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0]


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0:
    """ DataInput specifies a data input sink to an object. If input is array, it will be appended to the target field paths.

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ConditionsItems0], default is Undefined, optional
         When the Conditions is satified, ToFieldPaths will be filled with passed value
    inputStore : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStore, default is Undefined, optional
        input store
    strategyMergeKeys : [str], default is Undefined, optional
         StrategyMergeKeys specifies the merge key if the toFieldPaths target is an array. The StrategyMergeKeys is optional, by default, if the toFieldPaths target is an array, we will append. If StrategyMergeKeys specified, we will check the key in the target array. If any key exist, do update; if no key exist, append.
    toFieldPaths : [str], default is Undefined, optional
         ToFieldPaths specifies the field paths of an object to fill passed value.
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ValueFrom, default is Undefined, optional
        value from
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ConditionsItems0]

    inputStore?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStore

    strategyMergeKeys?: [str]

    toFieldPaths?: [str]

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStore:
    """ InputStore specifies the object used to read intermediate data genereted by DataOutput

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    operations : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0], default is Undefined, optional
         Operations specify the data processing operations
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    operations?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0]

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0:
    """ DataOperation defines the specific operation for data

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0], default is Undefined, optional
        conditions
    op : str, default is Undefined, required
         Operator specifies the operation under this DataOperation type
    toDataPath : str, default is Undefined, optional
         ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath "redis" specifies "redis info" in '{"redis":"redis info"}'
    toFieldPath : str, default is Undefined, required
         ToFieldPath refers to the value of an object's field
    $type : str, default is Undefined, required
         Type specifies the type of DataOperation
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ValueFrom, default is Undefined, optional
        value from
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0]

    op: str

    toDataPath?: str

    toFieldPath: str

    $type: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0InputStoreOperationsItems0ValueFrom:
    """ ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataInputsItems0ValueFrom:
    """ ValueFrom specifies the value source.

    Attributes
    ----------
    dataOutputName : str, default is Undefined, required
         DataOutputName matches a name of a DataOutput in the same AppConfig.
    """


    dataOutputName: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0:
    """ DataOutput specifies a data output source from an object.

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0ConditionsItems0], default is Undefined, optional
         Conditions specify the conditions that should be satisfied before emitting a data output. Different conditions are AND-ed together. If no conditions is specified, it is by default to check output value not empty.
    fieldPath : str, default is Undefined, optional
         FieldPath refers to the value of an object's field.
    name : str, default is Undefined, optional
         Name is the unique name of a DataOutput in an ApplicationConfiguration.
    outputStore : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStore, default is Undefined, optional
        output store
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0ConditionsItems0]

    fieldPath?: str

    name?: str

    outputStore?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStore


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStore:
    """ OutputStore specifies the object used to store intermediate data generated by Operations

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    operations : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0], default is Undefined, optional
         Operations specify the data processing operations
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    operations?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0]

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0:
    """ DataOperation defines the specific operation for data

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0], default is Undefined, optional
        conditions
    op : str, default is Undefined, required
         Operator specifies the operation under this DataOperation type
    toDataPath : str, default is Undefined, optional
         ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath "redis" specifies "redis info" in '{"redis":"redis info"}'
    toFieldPath : str, default is Undefined, required
         ToFieldPath refers to the value of an object's field
    $type : str, default is Undefined, required
         Type specifies the type of DataOperation
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ValueFrom, default is Undefined, optional
        value from
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0]

    op: str

    toDataPath?: str

    toFieldPath: str

    $type: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0DataOutputsItems0OutputStoreOperationsItems0ValueFrom:
    """ ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ParameterValuesItems0:
    """ A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the component parameter to set.
    value : int, default is Undefined, required
         Value to set.
    """


    name: str

    value: int


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ScopesItems0:
    """ A ComponentScope specifies a scope in which a component should exist.

    Attributes
    ----------
    scopeRef : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ScopesItems0ScopeRef, default is Undefined, required
        scope ref
    """


    scopeRef: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ScopesItems0ScopeRef


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0ScopesItems0ScopeRef:
    """ A ScopeReference must refer to an OAM scope resource.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0:
    """ A ComponentTrait specifies a trait that should be applied to a component.

    Attributes
    ----------
    dataInputs : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0], default is Undefined, optional
         DataInputs specify the data input sinks into this trait.
    dataOutputs : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0], default is Undefined, optional
         DataOutputs specify the data output sources from this trait.
    trait : any, default is Undefined, required
         A Trait that will be created for the component
    """


    dataInputs?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0]

    dataOutputs?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0]

    trait: any


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0:
    """ DataInput specifies a data input sink to an object. If input is array, it will be appended to the target field paths.

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ConditionsItems0], default is Undefined, optional
         When the Conditions is satified, ToFieldPaths will be filled with passed value
    inputStore : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStore, default is Undefined, optional
        input store
    strategyMergeKeys : [str], default is Undefined, optional
         StrategyMergeKeys specifies the merge key if the toFieldPaths target is an array. The StrategyMergeKeys is optional, by default, if the toFieldPaths target is an array, we will append. If StrategyMergeKeys specified, we will check the key in the target array. If any key exist, do update; if no key exist, append.
    toFieldPaths : [str], default is Undefined, optional
         ToFieldPaths specifies the field paths of an object to fill passed value.
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ValueFrom, default is Undefined, optional
        value from
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ConditionsItems0]

    inputStore?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStore

    strategyMergeKeys?: [str]

    toFieldPaths?: [str]

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStore:
    """ InputStore specifies the object used to read intermediate data genereted by DataOutput

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    operations : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0], default is Undefined, optional
         Operations specify the data processing operations
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    operations?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0]

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0:
    """ DataOperation defines the specific operation for data

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0], default is Undefined, optional
        conditions
    op : str, default is Undefined, required
         Operator specifies the operation under this DataOperation type
    toDataPath : str, default is Undefined, optional
         ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath "redis" specifies "redis info" in '{"redis":"redis info"}'
    toFieldPath : str, default is Undefined, required
         ToFieldPath refers to the value of an object's field
    $type : str, default is Undefined, required
         Type specifies the type of DataOperation
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ValueFrom, default is Undefined, optional
        value from
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0]

    op: str

    toDataPath?: str

    toFieldPath: str

    $type: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0InputStoreOperationsItems0ValueFrom:
    """ ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataInputsItems0ValueFrom:
    """ ValueFrom specifies the value source.

    Attributes
    ----------
    dataOutputName : str, default is Undefined, required
         DataOutputName matches a name of a DataOutput in the same AppConfig.
    """


    dataOutputName: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0:
    """ DataOutput specifies a data output source from an object.

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0ConditionsItems0], default is Undefined, optional
         Conditions specify the conditions that should be satisfied before emitting a data output. Different conditions are AND-ed together. If no conditions is specified, it is by default to check output value not empty.
    fieldPath : str, default is Undefined, optional
         FieldPath refers to the value of an object's field.
    name : str, default is Undefined, optional
         Name is the unique name of a DataOutput in an ApplicationConfiguration.
    outputStore : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStore, default is Undefined, optional
        output store
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0ConditionsItems0]

    fieldPath?: str

    name?: str

    outputStore?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStore


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStore:
    """ OutputStore specifies the object used to store intermediate data generated by Operations

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    operations : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0], default is Undefined, optional
         Operations specify the data processing operations
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    operations?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0]

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0:
    """ DataOperation defines the specific operation for data

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0], default is Undefined, optional
        conditions
    op : str, default is Undefined, required
         Operator specifies the operation under this DataOperation type
    toDataPath : str, default is Undefined, optional
         ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath "redis" specifies "redis info" in '{"redis":"redis info"}'
    toFieldPath : str, default is Undefined, required
         ToFieldPath refers to the value of an object's field
    $type : str, default is Undefined, required
         Type specifies the type of DataOperation
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ValueFrom, default is Undefined, optional
        value from
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0]

    op: str

    toDataPath?: str

    toFieldPath: str

    $type: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0:
    """ ConditionRequirement specifies the requirement to match a value.

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
         FieldPath specifies got value from workload/trait object
    op : str, default is Undefined, required
         ConditionOperator specifies the operator to match a value.
    value : str, default is Undefined, optional
         Value specifies an expected value This is mutually exclusive with ValueFrom
    valueFrom : CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0ValueFrom, default is Undefined, optional
        value from
    """


    fieldPath?: str

    op: str

    value?: str

    valueFrom?: CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0ValueFrom


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ConditionsItems0ValueFrom:
    """ ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationSpecComponentsItems0TraitsItems0DataOutputsItems0OutputStoreOperationsItems0ValueFrom:
    """ ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value

    Attributes
    ----------
    fieldPath : str, default is Undefined, required
        field path
    """


    fieldPath: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatus:
    """ An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.

    Attributes
    ----------
    conditions : [CoreOamDevV1alpha2ApplicationConfigurationStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    historyWorkloads : [CoreOamDevV1alpha2ApplicationConfigurationStatusHistoryWorkloadsItems0], default is Undefined, optional
         HistoryWorkloads will record history but still working revision workloads.
    observedGeneration : int, default is Undefined, optional
         The generation observed by the appConfig controller.
    rollingStatus : str, default is Undefined, optional
         RollingStatus indicates what phase are we in the rollout phase
    status : str, default is Undefined, optional
         Status is a place holder for a customized controller to fill if it needs a single place to summarize the status of the entire application
    workloads : [CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0], default is Undefined, optional
         Workloads created by this ApplicationConfiguration.
    dependency : CoreOamDevV1alpha2ApplicationConfigurationStatusDependency, default is Undefined, optional
        dependency
    """


    conditions?: [CoreOamDevV1alpha2ApplicationConfigurationStatusConditionsItems0]

    historyWorkloads?: [CoreOamDevV1alpha2ApplicationConfigurationStatusHistoryWorkloadsItems0]

    observedGeneration?: int

    rollingStatus?: str

    status?: str

    workloads?: [CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0]

    dependency?: CoreOamDevV1alpha2ApplicationConfigurationStatusDependency


schema CoreOamDevV1alpha2ApplicationConfigurationStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusDependency:
    """ DependencyStatus represents the observed state of the dependency of an ApplicationConfiguration.

    Attributes
    ----------
    unsatisfied : [CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0], default is Undefined, optional
        unsatisfied
    """


    unsatisfied?: [CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0]


schema CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0:
    """ UnstaifiedDependency describes unsatisfied dependency flow between one pair of objects.

    Attributes
    ----------
    from : CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0From, default is Undefined, required
        from
    reason : str, default is Undefined, required
        reason
    to : CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0To, default is Undefined, required
        to
    """


    from: CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0From

    reason: str

    to: CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0To


schema CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0From:
    """ DependencyFromObject represents the object that dependency data comes from.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusDependencyUnsatisfiedItems0To:
    """ DependencyToObject represents the object that dependency data goes to.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    fieldPaths : [str], default is Undefined, optional
        field paths
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    fieldPaths?: [str]

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusHistoryWorkloadsItems0:
    """ HistoryWorkload contain the old component revision that are still running

    Attributes
    ----------
    revision : str, default is Undefined, optional
         Revision of this workload
    workloadRef : CoreOamDevV1alpha2ApplicationConfigurationStatusHistoryWorkloadsItems0WorkloadRef, default is Undefined, optional
        workload ref
    """


    revision?: str

    workloadRef?: CoreOamDevV1alpha2ApplicationConfigurationStatusHistoryWorkloadsItems0WorkloadRef


schema CoreOamDevV1alpha2ApplicationConfigurationStatusHistoryWorkloadsItems0WorkloadRef:
    """ Reference to running workload.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0:
    """ A WorkloadStatus represents the status of a workload.

    Attributes
    ----------
    appliedComponentRevision : str, default is Undefined, optional
         AppliedComponentRevision indicates the applied component revision name of this workload
    componentName : str, default is Undefined, optional
         ComponentName that produced this workload.
    componentRevisionName : str, default is Undefined, optional
         ComponentRevisionName of current component
    dependencyUnsatisfied : bool, default is Undefined, optional
         DependencyUnsatisfied notify does the workload has dependency unsatisfied
    scopes : [CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0ScopesItems0], default is Undefined, optional
         Scopes associated with this workload.
    status : str, default is Undefined, optional
         Status is a place holder for a customized controller to fill if it needs a single place to summarize the entire status of the workload
    traits : [CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0TraitsItems0], default is Undefined, optional
         Traits associated with this workload.
    workloadRef : CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0WorkloadRef, default is Undefined, optional
        workload ref
    """


    appliedComponentRevision?: str

    componentName?: str

    componentRevisionName?: str

    dependencyUnsatisfied?: bool

    scopes?: [CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0ScopesItems0]

    status?: str

    traits?: [CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0TraitsItems0]

    workloadRef?: CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0WorkloadRef


schema CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0ScopesItems0:
    """ A WorkloadScope represents a scope associated with a workload and its status

    Attributes
    ----------
    scopeRef : CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0ScopesItems0ScopeRef, default is Undefined, required
        scope ref
    status : str, default is Undefined, optional
         Status is a place holder for a customized controller to fill if it needs a single place to summarize the status of the scope
    """


    scopeRef: CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0ScopesItems0ScopeRef

    status?: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0ScopesItems0ScopeRef:
    """ Reference to a scope created by an ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0TraitsItems0:
    """ A WorkloadTrait represents a trait associated with a workload and its status

    Attributes
    ----------
    appliedGeneration : int, default is Undefined, optional
         AppliedGeneration indicates the generation observed by the appConfig controller. The same field is also recorded in the annotations of traits. A trait is possible to be deleted from cluster after created. This field is useful to track the observed generation of traits after they are deleted.
    dependencyUnsatisfied : bool, default is Undefined, optional
         DependencyUnsatisfied notify does the trait has dependency unsatisfied
    message : str, default is Undefined, optional
         Message will allow controller to leave some additional information for this trait
    status : str, default is Undefined, optional
         Status is a place holder for a customized controller to fill if it needs a single place to summarize the status of the trait
    traitRef : CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0TraitsItems0TraitRef, default is Undefined, required
        trait ref
    """


    appliedGeneration?: int

    dependencyUnsatisfied?: bool

    message?: str

    status?: str

    traitRef: CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0TraitsItems0TraitRef


schema CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0TraitsItems0TraitRef:
    """ Reference to a trait created by an ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationConfigurationStatusWorkloadsItems0WorkloadRef:
    """ Reference to a workload created by an ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str



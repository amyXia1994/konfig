"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis


schema Application:
    """ Application is the Schema for the applications API

    Attributes
    ----------
    apiVersion : str, default is "core.oam.dev/v1alpha2", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreOamDevV1alpha2ApplicationSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1alpha2ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "core.oam.dev/v1alpha2" = "core.oam.dev/v1alpha2"

    kind: "Application" = "Application"

    metadata?: apis.ObjectMeta

    spec?: CoreOamDevV1alpha2ApplicationSpec

    status?: CoreOamDevV1alpha2ApplicationStatus


schema CoreOamDevV1alpha2ApplicationSpec:
    """ ApplicationSpec is the spec of Application

    Attributes
    ----------
    components : [CoreOamDevV1alpha2ApplicationSpecComponentsItems0], default is Undefined, required
        components
    rolloutPlan : CoreOamDevV1alpha2ApplicationSpecRolloutPlan, default is Undefined, optional
        rollout plan
    """


    components: [CoreOamDevV1alpha2ApplicationSpecComponentsItems0]

    rolloutPlan?: CoreOamDevV1alpha2ApplicationSpecRolloutPlan


schema CoreOamDevV1alpha2ApplicationSpecComponentsItems0:
    """ ApplicationComponent describe the component of application

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    scopes : {str:str}, default is Undefined, optional
         scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
    settings : any, default is Undefined, optional
        settings
    traits : [CoreOamDevV1alpha2ApplicationSpecComponentsItems0TraitsItems0], default is Undefined, optional
         Traits define the trait of one component, the type must be array to keep the order.
    $type : str, default is Undefined, required
        type
    """


    name: str

    scopes?: {str:str}

    settings?: any

    traits?: [CoreOamDevV1alpha2ApplicationSpecComponentsItems0TraitsItems0]

    $type: str


schema CoreOamDevV1alpha2ApplicationSpecComponentsItems0TraitsItems0:
    """ ApplicationTrait defines the trait of application

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    properties : any, default is Undefined, optional
        properties
    """


    name: str

    properties?: any


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlan:
    """ RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved

    Attributes
    ----------
    batchPartition : int, default is Undefined, optional
         All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches
    canaryMetric : [CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0], default is Undefined, optional
         CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process
    numBatches : int, default is Undefined, optional
         The number of batches, default = 1
    paused : bool, default is Undefined, optional
         Paused the rollout, default is false
    rolloutBatches : [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0], default is Undefined, optional
         The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty
    rolloutStrategy : str, default is Undefined, optional
         RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType
    rolloutWebhooks : [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutWebhooksItems0], default is Undefined, optional
         RolloutWebhooks provide a way for the rollout to interact with an external process
    targetSize : int, default is Undefined, optional
         The size of the target resource. The default is the same as the size of the source resource.
    """


    batchPartition?: int

    canaryMetric?: [CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0]

    numBatches?: int

    paused?: bool

    rolloutBatches?: [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0]

    rolloutStrategy?: str

    rolloutWebhooks?: [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutWebhooksItems0]

    targetSize?: int


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0:
    """ CanaryMetric holds the reference to metrics used for canary analysis

    Attributes
    ----------
    interval : str, default is Undefined, optional
         Interval represents the windows size
    metricsRange : CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0MetricsRange, default is Undefined, optional
        metrics range
    name : str, default is Undefined, required
         Name of the metric
    templateRef : CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0TemplateRef, default is Undefined, optional
        template ref
    """


    interval?: str

    metricsRange?: CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0MetricsRange

    name: str

    templateRef?: CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0TemplateRef


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0MetricsRange:
    """ Range value accepted for this metric

    Attributes
    ----------
    max : int, default is Undefined, optional
         Maximum value
    min : int, default is Undefined, optional
         Minimum value
    """


    max?: int

    min?: int


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanCanaryMetricItems0TemplateRef:
    """ TemplateRef references a metric template object

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0:
    """ RolloutBatch is used to describe how the each batch rollout should be

    Attributes
    ----------
    batchRolloutWebhooks : [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0BatchRolloutWebhooksItems0], default is Undefined, optional
         RolloutWebhooks provides a way for the batch rollout to interact with an external process
    canaryMetric : [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0], default is Undefined, optional
         CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch
    instanceInterval : int, default is Undefined, optional
         The wait time, in seconds, between instances upgrades, default = 0
    maxUnavailable : int, default is Undefined, optional
         MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0
    podList : [str], default is Undefined, optional
         The list of Pods to get upgraded it is mutually exclusive with the Replicas field
    replicas : int, default is Undefined, optional
         Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field
    """


    batchRolloutWebhooks?: [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0BatchRolloutWebhooksItems0]

    canaryMetric?: [CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0]

    instanceInterval?: int

    maxUnavailable?: int

    podList?: [str]

    replicas?: int


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0BatchRolloutWebhooksItems0:
    """ RolloutWebhook holds the reference to external checks used for canary analysis

    Attributes
    ----------
    expectedStatus : [int], default is Undefined, optional
         ExpectedStatus contains all the expected http status code that we will accept as success
    metadata : {str:str}, default is Undefined, optional
         Metadata (key-value pairs) for this webhook
    method : str, default is Undefined, optional
         Method the HTTP call method, default is POST
    name : str, default is Undefined, required
         Name of this webhook
    $type : str, default is Undefined, required
         Type of this webhook
    url : str, default is Undefined, required
         URL address of this webhook
    """


    expectedStatus?: [int]

    metadata?: {str:str}

    method?: str

    name: str

    $type: str

    url: str


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0:
    """ CanaryMetric holds the reference to metrics used for canary analysis

    Attributes
    ----------
    interval : str, default is Undefined, optional
         Interval represents the windows size
    metricsRange : CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0MetricsRange, default is Undefined, optional
        metrics range
    name : str, default is Undefined, required
         Name of the metric
    templateRef : CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0TemplateRef, default is Undefined, optional
        template ref
    """


    interval?: str

    metricsRange?: CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0MetricsRange

    name: str

    templateRef?: CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0TemplateRef


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0MetricsRange:
    """ Range value accepted for this metric

    Attributes
    ----------
    max : int, default is Undefined, optional
         Maximum value
    min : int, default is Undefined, optional
         Minimum value
    """


    max?: int

    min?: int


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutBatchesItems0CanaryMetricItems0TemplateRef:
    """ TemplateRef references a metric template object

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationSpecRolloutPlanRolloutWebhooksItems0:
    """ RolloutWebhook holds the reference to external checks used for canary analysis

    Attributes
    ----------
    expectedStatus : [int], default is Undefined, optional
         ExpectedStatus contains all the expected http status code that we will accept as success
    metadata : {str:str}, default is Undefined, optional
         Metadata (key-value pairs) for this webhook
    method : str, default is Undefined, optional
         Method the HTTP call method, default is POST
    name : str, default is Undefined, required
         Name of this webhook
    $type : str, default is Undefined, required
         Type of this webhook
    url : str, default is Undefined, required
         URL address of this webhook
    """


    expectedStatus?: [int]

    metadata?: {str:str}

    method?: str

    name: str

    $type: str

    url: str


schema CoreOamDevV1alpha2ApplicationStatus:
    """ AppStatus defines the observed state of Application

    Attributes
    ----------
    appliedResources : [CoreOamDevV1alpha2ApplicationStatusAppliedResourcesItems0], default is Undefined, optional
         AppliedResources record the resources that the  workflow step apply.
    components : [CoreOamDevV1alpha2ApplicationStatusComponentsItems0], default is Undefined, optional
         Components record the related Components created by Application Controller
    conditions : [CoreOamDevV1alpha2ApplicationStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
         The generation observed by the application controller.
    policy : [CoreOamDevV1alpha2ApplicationStatusPolicyItems0], default is Undefined, optional
         PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
    services : [CoreOamDevV1alpha2ApplicationStatusServicesItems0], default is Undefined, optional
         Services record the status of the application services
    status : str, default is Undefined, optional
         ApplicationPhase is a label for the condition of an application at the current time
    latestRevision : CoreOamDevV1alpha2ApplicationStatusLatestRevision, default is Undefined, optional
        latest revision
    workflow : CoreOamDevV1alpha2ApplicationStatusWorkflow, default is Undefined, optional
        workflow
    """


    appliedResources?: [CoreOamDevV1alpha2ApplicationStatusAppliedResourcesItems0]

    components?: [CoreOamDevV1alpha2ApplicationStatusComponentsItems0]

    conditions?: [CoreOamDevV1alpha2ApplicationStatusConditionsItems0]

    observedGeneration?: int

    policy?: [CoreOamDevV1alpha2ApplicationStatusPolicyItems0]

    services?: [CoreOamDevV1alpha2ApplicationStatusServicesItems0]

    status?: str

    latestRevision?: CoreOamDevV1alpha2ApplicationStatusLatestRevision

    workflow?: CoreOamDevV1alpha2ApplicationStatusWorkflow


schema CoreOamDevV1alpha2ApplicationStatusAppliedResourcesItems0:
    """ ClusterObjectReference defines the object reference with cluster.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    cluster : str, default is Undefined, optional
        cluster
    creator : str, default is Undefined, optional
        creator
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    cluster?: str

    creator?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationStatusComponentsItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1alpha2ApplicationStatusLatestRevision:
    """ LatestRevision of the application configuration it generates

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1alpha2ApplicationStatusPolicyItems0:
    """ PolicyStatus records the status of policy Deprecated

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    status : any, default is Undefined, optional
        status
    $type : str, default is Undefined, required
        type
    """


    name: str

    status?: any

    $type: str


schema CoreOamDevV1alpha2ApplicationStatusServicesItems0:
    """ ApplicationComponentStatus record the health status of App component

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        cluster
    env : str, default is Undefined, optional
        env
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    scopes : [CoreOamDevV1alpha2ApplicationStatusServicesItems0ScopesItems0], default is Undefined, optional
        scopes
    traits : [CoreOamDevV1alpha2ApplicationStatusServicesItems0TraitsItems0], default is Undefined, optional
        traits
    workloadDefinition : CoreOamDevV1alpha2ApplicationStatusServicesItems0WorkloadDefinition, default is Undefined, optional
        workload definition
    """


    cluster?: str

    env?: str

    healthy: bool

    message?: str

    name: str

    namespace?: str

    scopes?: [CoreOamDevV1alpha2ApplicationStatusServicesItems0ScopesItems0]

    traits?: [CoreOamDevV1alpha2ApplicationStatusServicesItems0TraitsItems0]

    workloadDefinition?: CoreOamDevV1alpha2ApplicationStatusServicesItems0WorkloadDefinition


schema CoreOamDevV1alpha2ApplicationStatusServicesItems0ScopesItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationStatusServicesItems0TraitsItems0:
    """ ApplicationTraitStatus records the trait health status

    Attributes
    ----------
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    $type : str, default is Undefined, required
        type
    """


    healthy: bool

    message?: str

    $type: str


schema CoreOamDevV1alpha2ApplicationStatusServicesItems0WorkloadDefinition:
    """ WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    """


    apiVersion: str

    kind: str


schema CoreOamDevV1alpha2ApplicationStatusWorkflow:
    """ Workflow record the status of workflow

    Attributes
    ----------
    appRevision : str, default is Undefined, optional
        app revision
    endTime : str, default is Undefined, optional
        end time
    finished : bool, default is Undefined, required
        finished
    message : str, default is Undefined, optional
        message
    mode : str, default is Undefined, required
        mode
    startTime : str, default is Undefined, optional
        start time
    status : str, default is Undefined, optional
         WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
    steps : [CoreOamDevV1alpha2ApplicationStatusWorkflowStepsItems0], default is Undefined, optional
        steps
    suspend : bool, default is Undefined, required
        suspend
    suspendState : str, default is Undefined, optional
        suspend state
    terminated : bool, default is Undefined, required
        terminated
    contextBackend : CoreOamDevV1alpha2ApplicationStatusWorkflowContextBackend, default is Undefined, optional
        context backend
    """


    appRevision?: str

    endTime?: str

    finished: bool

    message?: str

    mode: str

    startTime?: str

    status?: str

    steps?: [CoreOamDevV1alpha2ApplicationStatusWorkflowStepsItems0]

    suspend: bool

    suspendState?: str

    terminated: bool

    contextBackend?: CoreOamDevV1alpha2ApplicationStatusWorkflowContextBackend


schema CoreOamDevV1alpha2ApplicationStatusWorkflowContextBackend:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1alpha2ApplicationStatusWorkflowStepsItems0:
    """ WorkflowStepStatus record the status of a workflow step, include step status and subStep status

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    subSteps : [CoreOamDevV1alpha2ApplicationStatusWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    subSteps?: [CoreOamDevV1alpha2ApplicationStatusWorkflowStepsItems0SubStepsItems0]

    $type?: str


schema CoreOamDevV1alpha2ApplicationStatusWorkflowStepsItems0SubStepsItems0:
    """ StepStatus record the base status of workflow step, which could be workflow step or subStep

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    $type?: str



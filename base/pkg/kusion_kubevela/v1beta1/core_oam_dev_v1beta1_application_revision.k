"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis


schema ApplicationRevision:
    """ ApplicationRevision is the Schema for the ApplicationRevision API

    Attributes
    ----------
    apiVersion : str, default is "core.oam.dev/v1beta1", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ApplicationRevision", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionStatus, default is Undefined, optional
        status
    """

    apiVersion: "core.oam.dev/v1beta1" = "core.oam.dev/v1beta1"

    kind: "ApplicationRevision" = "ApplicationRevision"

    metadata?: apis.ObjectMeta

    spec?: CoreOamDevV1beta1ApplicationRevisionSpec

    status?: CoreOamDevV1beta1ApplicationRevisionStatus


schema CoreOamDevV1beta1ApplicationRevisionSpec:
    """ ApplicationRevisionSpec is the spec of ApplicationRevision

    Attributes
    ----------
    componentDefinitions : {str:CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnon}, default is Undefined, optional
         ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application
    policies : {str:CoreOamDevV1beta1ApplicationRevisionSpecPoliciesAnon}, default is Undefined, optional
         Policies records the external policies
    policyDefinitions : {str:CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnon}, default is Undefined, optional
         PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application
    referredObjects : [any], default is Undefined, optional
         ReferredObjects records the referred objects used in the ref-object typed components
    scopeDefinitions : {str:CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnon}, default is Undefined, optional
         ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application
    scopeGVK : {str:CoreOamDevV1beta1ApplicationRevisionSpecScopeGVKAnon}, default is Undefined, optional
         ScopeGVK records the apiVersion to GVK mapping
    traitDefinitions : {str:CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnon}, default is Undefined, optional
         TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application
    workflowStepDefinitions : {str:CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnon}, default is Undefined, optional
         WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application
    workloadDefinitions : {str:CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnon}, default is Undefined, optional
         WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application
    application : CoreOamDevV1beta1ApplicationRevisionSpecApplication, default is Undefined, required
        application
    compression : CoreOamDevV1beta1ApplicationRevisionSpecCompression, default is Undefined, optional
        compression
    workflow : CoreOamDevV1beta1ApplicationRevisionSpecWorkflow, default is Undefined, optional
        workflow
    """


    componentDefinitions?: {str:CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnon}

    policies?: {str:CoreOamDevV1beta1ApplicationRevisionSpecPoliciesAnon}

    policyDefinitions?: {str:CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnon}

    referredObjects?: [any]

    scopeDefinitions?: {str:CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnon}

    scopeGVK?: {str:CoreOamDevV1beta1ApplicationRevisionSpecScopeGVKAnon}

    traitDefinitions?: {str:CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnon}

    workflowStepDefinitions?: {str:CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnon}

    workloadDefinitions?: {str:CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnon}

    application: CoreOamDevV1beta1ApplicationRevisionSpecApplication

    compression?: CoreOamDevV1beta1ApplicationRevisionSpecCompression

    workflow?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflow


schema CoreOamDevV1beta1ApplicationRevisionSpecApplication:
    """ Application records the snapshot of the created/modified Application

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpec

    status?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpec:
    """ ApplicationSpec is the spec of Application

    Attributes
    ----------
    components : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0], default is Undefined, required
        components
    policies : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecPoliciesItems0], default is Undefined, optional
         Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.
    workflow : CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflow, default is Undefined, optional
        workflow
    """


    components: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0]

    policies?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecPoliciesItems0]

    workflow?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflow


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0:
    """ ApplicationComponent describe the component of application

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
        depends on
    externalRevision : str, default is Undefined, optional
         ExternalRevision specified the component revisionName
    inputs : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0InputsItems0], default is Undefined, optional
         StepInputs defines variable input of WorkflowStep
    name : str, default is Undefined, required
        name
    outputs : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0OutputsItems0], default is Undefined, optional
         StepOutputs defines output variable of WorkflowStep
    properties : any, default is Undefined, optional
        properties
    scopes : {str:str}, default is Undefined, optional
         scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
    traits : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0TraitsItems0], default is Undefined, optional
         Traits define the trait of one component, the type must be array to keep the order.
    $type : str, default is Undefined, required
        type
    """


    dependsOn?: [str]

    externalRevision?: str

    inputs?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0InputsItems0]

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0OutputsItems0]

    properties?: any

    scopes?: {str:str}

    traits?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0TraitsItems0]

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0InputsItems0:
    """core oam dev v1beta1 application revision spec application spec components items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0OutputsItems0:
    """core oam dev v1beta1 application revision spec application spec components items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecComponentsItems0TraitsItems0:
    """ ApplicationTrait defines the trait of application

    Attributes
    ----------
    properties : any, default is Undefined, optional
        properties
    $type : str, default is Undefined, required
        type
    """


    properties?: any

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecPoliciesItems0:
    """ AppPolicy defines a global policy for all components in the app.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name is the unique name of the policy.
    properties : any, default is Undefined, optional
        properties
    $type : str, default is Undefined, required
        type
    """


    name: str

    properties?: any

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflow:
    """ Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark "finish" phase in status.conditions.

    Attributes
    ----------
    ref : str, default is Undefined, optional
        ref
    steps : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0], default is Undefined, optional
        steps
    mode : CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowMode, default is Undefined, optional
        mode
    """


    ref?: str

    steps?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0]

    mode?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowMode


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowMode:
    """ WorkflowExecuteMode defines the mode of workflow execution

    Attributes
    ----------
    steps : str, default is Undefined, optional
         Steps is the mode of workflow steps execution
    subSteps : str, default is Undefined, optional
         SubSteps is the mode of workflow sub steps execution
    """


    steps?: str

    subSteps?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0:
    """ WorkflowStep defines how to execute a workflow step.

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
         DependsOn is the dependency of the step
    $if : str, default is Undefined, optional
         If is the if condition of the step
    inputs : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0InputsItems0], default is Undefined, optional
         Inputs is the inputs of the step
    meta : CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0Meta, default is Undefined, optional
        meta
    name : str, default is Undefined, required
         Name is the unique name of the workflow step.
    outputs : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0OutputsItems0], default is Undefined, optional
         Outputs is the outputs of the step
    properties : any, default is Undefined, optional
         Properties is the properties of the step
    subSteps : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    timeout : str, default is Undefined, optional
         Timeout is the timeout of the step
    $type : str, default is Undefined, required
         Type is the type of the workflow step.
    """


    dependsOn?: [str]

    $if?: str

    inputs?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0InputsItems0]

    meta?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0Meta

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0OutputsItems0]

    properties?: any

    subSteps?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0]

    timeout?: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0InputsItems0:
    """core oam dev v1beta1 application revision spec application spec workflow steps items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0Meta:
    """ Meta is the meta data of the workflow step.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        alias
    """


    alias?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0OutputsItems0:
    """core oam dev v1beta1 application revision spec application spec workflow steps items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0:
    """ WorkflowStepBase defines the workflow step base

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
         DependsOn is the dependency of the step
    $if : str, default is Undefined, optional
         If is the if condition of the step
    inputs : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0InputsItems0], default is Undefined, optional
         Inputs is the inputs of the step
    meta : CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0Meta, default is Undefined, optional
        meta
    name : str, default is Undefined, required
         Name is the unique name of the workflow step.
    outputs : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0OutputsItems0], default is Undefined, optional
         Outputs is the outputs of the step
    properties : any, default is Undefined, optional
         Properties is the properties of the step
    timeout : str, default is Undefined, optional
         Timeout is the timeout of the step
    $type : str, default is Undefined, required
         Type is the type of the workflow step.
    """


    dependsOn?: [str]

    $if?: str

    inputs?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0InputsItems0]

    meta?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0Meta

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0OutputsItems0]

    properties?: any

    timeout?: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0InputsItems0:
    """core oam dev v1beta1 application revision spec application spec workflow steps items0 sub steps items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0Meta:
    """ Meta is the meta data of the workflow step.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        alias
    """


    alias?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationSpecWorkflowStepsItems0SubStepsItems0OutputsItems0:
    """core oam dev v1beta1 application revision spec application spec workflow steps items0 sub steps items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatus:
    """ AppStatus defines the observed state of Application

    Attributes
    ----------
    appliedResources : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusAppliedResourcesItems0], default is Undefined, optional
         AppliedResources record the resources that the  workflow step apply.
    components : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusComponentsItems0], default is Undefined, optional
         Components record the related Components created by Application Controller
    conditions : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
         The generation observed by the application controller.
    policy : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusPolicyItems0], default is Undefined, optional
         PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
    services : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0], default is Undefined, optional
         Services record the status of the application services
    status : str, default is Undefined, optional
         ApplicationPhase is a label for the condition of an application at the current time
    latestRevision : CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusLatestRevision, default is Undefined, optional
        latest revision
    workflow : CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflow, default is Undefined, optional
        workflow
    """


    appliedResources?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusAppliedResourcesItems0]

    components?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusComponentsItems0]

    conditions?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusConditionsItems0]

    observedGeneration?: int

    policy?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusPolicyItems0]

    services?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0]

    status?: str

    latestRevision?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusLatestRevision

    workflow?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflow


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusAppliedResourcesItems0:
    """ ClusterObjectReference defines the object reference with cluster.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    cluster : str, default is Undefined, optional
        cluster
    creator : str, default is Undefined, optional
        creator
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    cluster?: str

    creator?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusComponentsItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusLatestRevision:
    """ LatestRevision of the application configuration it generates

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusPolicyItems0:
    """ PolicyStatus records the status of policy Deprecated

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    status : any, default is Undefined, optional
        status
    $type : str, default is Undefined, required
        type
    """


    name: str

    status?: any

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0:
    """ ApplicationComponentStatus record the health status of App component

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        cluster
    env : str, default is Undefined, optional
        env
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    scopes : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0ScopesItems0], default is Undefined, optional
        scopes
    traits : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0TraitsItems0], default is Undefined, optional
        traits
    workloadDefinition : CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0WorkloadDefinition, default is Undefined, optional
        workload definition
    """


    cluster?: str

    env?: str

    healthy: bool

    message?: str

    name: str

    namespace?: str

    scopes?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0ScopesItems0]

    traits?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0TraitsItems0]

    workloadDefinition?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0WorkloadDefinition


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0ScopesItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0TraitsItems0:
    """ ApplicationTraitStatus records the trait health status

    Attributes
    ----------
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    $type : str, default is Undefined, required
        type
    """


    healthy: bool

    message?: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusServicesItems0WorkloadDefinition:
    """ WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    """


    apiVersion: str

    kind: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflow:
    """ Workflow record the status of workflow

    Attributes
    ----------
    appRevision : str, default is Undefined, optional
        app revision
    endTime : str, default is Undefined, optional
        end time
    finished : bool, default is Undefined, required
        finished
    message : str, default is Undefined, optional
        message
    mode : str, default is Undefined, required
        mode
    startTime : str, default is Undefined, optional
        start time
    status : str, default is Undefined, optional
         WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
    steps : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0], default is Undefined, optional
        steps
    suspend : bool, default is Undefined, required
        suspend
    suspendState : str, default is Undefined, optional
        suspend state
    terminated : bool, default is Undefined, required
        terminated
    contextBackend : CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowContextBackend, default is Undefined, optional
        context backend
    """


    appRevision?: str

    endTime?: str

    finished: bool

    message?: str

    mode: str

    startTime?: str

    status?: str

    steps?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0]

    suspend: bool

    suspendState?: str

    terminated: bool

    contextBackend?: CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowContextBackend


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowContextBackend:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0:
    """ WorkflowStepStatus record the status of a workflow step, include step status and subStep status

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    subSteps : [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    subSteps?: [CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0SubStepsItems0]

    $type?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecApplicationStatusWorkflowStepsItems0SubStepsItems0:
    """ StepStatus record the base status of workflow step, which could be workflow step or subStep

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    $type?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnon:
    """ ComponentDefinition is the Schema for the componentdefinitions API

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpec

    status?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpec:
    """ ComponentDefinitionSpec defines the desired state of ComponentDefinition

    Attributes
    ----------
    childResourceKinds : [CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecChildResourceKindsItems0], default is Undefined, optional
         ChildResourceKinds are the list of GVK of the child resources this workload generates
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    podSpecPath : str, default is Undefined, optional
         PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.
    revisionLabel : str, default is Undefined, optional
         RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).
    schematic : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    status : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecStatus, default is Undefined, optional
        status
    workload : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkload, default is Undefined, required
        workload
    """


    childResourceKinds?: [CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecChildResourceKindsItems0]

    extension?: any

    podSpecPath?: str

    revisionLabel?: str

    schematic?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematic

    status?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecStatus

    workload: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkload


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecChildResourceKindsItems0:
    """ A ChildResourceKind defines a child Kubernetes resource kind with a selector

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
         APIVersion of the child resource
    kind : str, default is Undefined, required
         Kind of the child resource
    selector : {str:str}, default is Undefined, optional
         Selector to select the child resources that the workload wants to expose to traits
    """


    apiVersion: str

    kind: str

    selector?: {str:str}


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the workload

    Attributes
    ----------
    cue : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecStatus:
    """ Status defines the custom health policy and status message for workload

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
         CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
         HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkload:
    """ Workload is a workload type descriptor

    Attributes
    ----------
    definition : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkloadDefinition, default is Undefined, optional
        definition
    $type : str, default is Undefined, optional
         Type ref to a WorkloadDefinition via name
    """


    definition?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkloadDefinition

    $type?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonSpecWorkloadDefinition:
    """ Definition mutually exclusive to workload.type, a embedded WorkloadDefinition

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    """


    apiVersion: str

    kind: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatus:
    """ ComponentDefinitionStatus is the status of ComponentDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    configMapRef : str, default is Undefined, optional
         ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatusLatestRevision


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecComponentDefinitionsAnonStatusLatestRevision:
    """ LatestRevision of the component definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecCompression:
    """ Compression represents the compressed components in apprev in base64 (if compression is enabled).

    Attributes
    ----------
    data : str, default is Undefined, optional
        data
    $type : str, default is Undefined, optional
         Type the compression type
    """


    data?: str

    $type?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecPoliciesAnon:
    """ Policy is the Schema for the policy API

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    properties : any, default is Undefined, optional
        properties
    $type : str, default is Undefined, required
        type
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    properties?: any

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnon:
    """ PolicyDefinition is the Schema for the policydefinitions API

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpec

    status?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpec:
    """ PolicyDefinitionSpec defines the desired state of PolicyDefinition

    Attributes
    ----------
    definitionRef : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecDefinitionRef, default is Undefined, optional
        definition ref
    manageHealthCheck : bool, default is Undefined, optional
         ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.
    schematic : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    """


    definitionRef?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecDefinitionRef

    manageHealthCheck?: bool

    schematic?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematic


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this trait kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the policy definition. Only CUE schematic is supported for now.

    Attributes
    ----------
    cue : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatus:
    """ PolicyDefinitionStatus is the status of PolicyDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    configMapRef : str, default is Undefined, optional
         ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatusLatestRevision


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecPolicyDefinitionsAnonStatusLatestRevision:
    """ LatestRevision of the component definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnon:
    """ A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnonSpec, default is Undefined, optional
        spec
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnonSpec


schema CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnonSpec:
    """ A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.

    Attributes
    ----------
    allowComponentOverlap : bool, default is Undefined, required
         AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.
    definitionRef : CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnonSpecDefinitionRef, default is Undefined, required
        definition ref
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    workloadRefsPath : str, default is Undefined, optional
         WorkloadRefsPath indicates if/where a scope accepts workloadRef objects
    """


    allowComponentOverlap: bool

    definitionRef: CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnonSpecDefinitionRef

    extension?: any

    workloadRefsPath?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecScopeDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this scope kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecScopeGVKAnon:
    """ GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling

    Attributes
    ----------
    group : str, default is Undefined, required
        group
    kind : str, default is Undefined, required
        kind
    version : str, default is Undefined, required
        version
    """


    group: str

    kind: str

    version: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnon:
    """ A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpec

    status?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpec:
    """ A TraitDefinitionSpec defines the desired state of a TraitDefinition.

    Attributes
    ----------
    appliesToWorkloads : [str], default is Undefined, optional
         AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
    conflictsWith : [str], default is Undefined, optional
         ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: "service" # Trait definition name "services.k8s.io" # API resource/crd name "*.networking.k8s.io" # API group "labelSelector:foo=bar" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse
    controlPlaneOnly : bool, default is Undefined, optional
         ControlPlaneOnly defines which cluster is dispatched to
    definitionRef : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecDefinitionRef, default is Undefined, optional
        definition ref
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    manageWorkload : bool, default is Undefined, optional
         ManageWorkload defines the trait would be responsible for creating the workload
    podDisruptive : bool, default is Undefined, optional
         PodDisruptive specifies whether using the trait will cause the pod to restart or not.
    revisionEnabled : bool, default is Undefined, optional
         Revision indicates whether a trait is aware of component revision
    schematic : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    stage : str, default is Undefined, optional
         Stage defines the stage information to which this trait resource processing belongs. Currently, PreDispatch and PostDispatch are provided, which are used to control resource pre-process and post-process respectively.
    status : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecStatus, default is Undefined, optional
        status
    workloadRefPath : str, default is Undefined, optional
         WorkloadRefPath indicates where/if a trait accepts a workloadRef object
    """


    appliesToWorkloads?: [str]

    conflictsWith?: [str]

    controlPlaneOnly?: bool

    definitionRef?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecDefinitionRef

    extension?: any

    manageWorkload?: bool

    podDisruptive?: bool

    revisionEnabled?: bool

    schematic?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematic

    stage?: str

    status?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecStatus

    workloadRefPath?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this trait kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the trait. Only CUE and Kube schematic are supported for now.

    Attributes
    ----------
    cue : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonSpecStatus:
    """ Status defines the custom health policy and status message for trait

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
         CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
         HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatus:
    """ TraitDefinitionStatus is the status of TraitDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    configMapRef : str, default is Undefined, optional
         ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatusLatestRevision


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecTraitDefinitionsAnonStatusLatestRevision:
    """ LatestRevision of the component definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflow:
    """ Workflow records the external workflow

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    steps : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0], default is Undefined, optional
        steps
    mode : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowMode, default is Undefined, optional
        mode
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    steps?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0]

    mode?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowMode


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowMode:
    """ WorkflowExecuteMode defines the mode of workflow execution

    Attributes
    ----------
    steps : str, default is Undefined, optional
         Steps is the mode of workflow steps execution
    subSteps : str, default is Undefined, optional
         SubSteps is the mode of workflow sub steps execution
    """


    steps?: str

    subSteps?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnon:
    """ WorkflowStepDefinition is the Schema for the workflowstepdefinitions API

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpec

    status?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpec:
    """ WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition

    Attributes
    ----------
    definitionRef : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecDefinitionRef, default is Undefined, optional
        definition ref
    schematic : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    """


    definitionRef?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecDefinitionRef

    schematic?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematic


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this trait kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the workflow step definition. Only CUE schematic is supported for now.

    Attributes
    ----------
    cue : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatus:
    """ WorkflowStepDefinitionStatus is the status of WorkflowStepDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    configMapRef : str, default is Undefined, optional
         ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatusLatestRevision


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepDefinitionsAnonStatusLatestRevision:
    """ LatestRevision of the component definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0:
    """ WorkflowStep defines how to execute a workflow step.

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
         DependsOn is the dependency of the step
    $if : str, default is Undefined, optional
         If is the if condition of the step
    inputs : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0InputsItems0], default is Undefined, optional
         Inputs is the inputs of the step
    meta : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0Meta, default is Undefined, optional
        meta
    name : str, default is Undefined, required
         Name is the unique name of the workflow step.
    outputs : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0OutputsItems0], default is Undefined, optional
         Outputs is the outputs of the step
    properties : any, default is Undefined, optional
         Properties is the properties of the step
    subSteps : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    timeout : str, default is Undefined, optional
         Timeout is the timeout of the step
    $type : str, default is Undefined, required
         Type is the type of the workflow step.
    """


    dependsOn?: [str]

    $if?: str

    inputs?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0InputsItems0]

    meta?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0Meta

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0OutputsItems0]

    properties?: any

    subSteps?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0]

    timeout?: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0InputsItems0:
    """core oam dev v1beta1 application revision spec workflow steps items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0Meta:
    """ Meta is the meta data of the workflow step.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        alias
    """


    alias?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0OutputsItems0:
    """core oam dev v1beta1 application revision spec workflow steps items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0:
    """ WorkflowStepBase defines the workflow step base

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
         DependsOn is the dependency of the step
    $if : str, default is Undefined, optional
         If is the if condition of the step
    inputs : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0InputsItems0], default is Undefined, optional
         Inputs is the inputs of the step
    meta : CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0Meta, default is Undefined, optional
        meta
    name : str, default is Undefined, required
         Name is the unique name of the workflow step.
    outputs : [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0OutputsItems0], default is Undefined, optional
         Outputs is the outputs of the step
    properties : any, default is Undefined, optional
         Properties is the properties of the step
    timeout : str, default is Undefined, optional
         Timeout is the timeout of the step
    $type : str, default is Undefined, required
         Type is the type of the workflow step.
    """


    dependsOn?: [str]

    $if?: str

    inputs?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0InputsItems0]

    meta?: CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0Meta

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0OutputsItems0]

    properties?: any

    timeout?: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0InputsItems0:
    """core oam dev v1beta1 application revision spec workflow steps items0 sub steps items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0Meta:
    """ Meta is the meta data of the workflow step.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        alias
    """


    alias?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkflowStepsItems0SubStepsItems0OutputsItems0:
    """core oam dev v1beta1 application revision spec workflow steps items0 sub steps items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnon:
    """ A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpec

    status?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpec:
    """ A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.

    Attributes
    ----------
    childResourceKinds : [CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecChildResourceKindsItems0], default is Undefined, optional
         ChildResourceKinds are the list of GVK of the child resources this workload generates
    definitionRef : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecDefinitionRef, default is Undefined, required
        definition ref
    extension : any, default is Undefined, optional
         Extension is used for extension needs by OAM platform builders
    podSpecPath : str, default is Undefined, optional
         PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.
    revisionLabel : str, default is Undefined, optional
         RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).
    schematic : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematic, default is Undefined, optional
        schematic
    status : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecStatus, default is Undefined, optional
        status
    """


    childResourceKinds?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecChildResourceKindsItems0]

    definitionRef: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecDefinitionRef

    extension?: any

    podSpecPath?: str

    revisionLabel?: str

    schematic?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematic

    status?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecStatus


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecChildResourceKindsItems0:
    """ A ChildResourceKind defines a child Kubernetes resource kind with a selector

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
         APIVersion of the child resource
    kind : str, default is Undefined, required
         Kind of the child resource
    selector : {str:str}, default is Undefined, optional
         Selector to select the child resources that the workload wants to expose to traits
    """


    apiVersion: str

    kind: str

    selector?: {str:str}


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecDefinitionRef:
    """ Reference to the CustomResourceDefinition that defines this workload kind.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
         Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematic:
    """ Schematic defines the data format and template of the encapsulation of the workload

    Attributes
    ----------
    cue : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicCue, default is Undefined, optional
        cue
    helm : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicHelm, default is Undefined, optional
        helm
    kube : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKube, default is Undefined, optional
        kube
    terraform : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicCue

    helm?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicHelm

    kube?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKube

    terraform?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraform


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicCue:
    """ CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
         Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicHelm:
    """ A Helm represents resources used by a Helm module

    Attributes
    ----------
    release : any, default is Undefined, required
         Release records a Helm release used by a Helm module workload.
    repository : any, default is Undefined, required
         HelmRelease records a Helm repository used by a Helm module workload.
    """


    release: any

    repository: any


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKube:
    """ Kube defines the encapsulation in raw Kubernetes resource format

    Attributes
    ----------
    parameters : [CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKubeParametersItems0], default is Undefined, optional
         Parameters defines configurable parameters
    template : any, default is Undefined, required
         Template defines the raw Kubernetes resource
    """


    parameters?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKubeParametersItems0]

    template: any


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicKubeParametersItems0:
    """ A KubeParameter defines a configurable parameter of a component.

    Attributes
    ----------
    description : str, default is Undefined, optional
         Description of this parameter.
    fieldPaths : [str], default is Undefined, required
         FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. 	All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
    name : str, default is Undefined, required
         Name of this parameter
    required : bool, default is Undefined, optional
         Required specifies whether or not a value for this parameter must be supplied when authoring an Application.
    $type : str, default is Undefined, required
         ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.
    """


    description?: str

    fieldPaths: [str]

    name: str

    required?: bool

    $type: "string" | "number" | "boolean"


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraform:
    """ Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
         Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
         Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
         DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    path : str, default is Undefined, optional
         Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
         Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    path?: str

    providerRef?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformProviderRef:
    """ ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the referenced object.
    namespace : str, default is "default", optional
         Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecSchematicTerraformWriteConnectionSecretToRef:
    """ WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name of the secret.
    namespace : str, default is Undefined, optional
         Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonSpecStatus:
    """ Status defines the custom health policy and status message for workload

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
         CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
         HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonStatus:
    """ WorkloadDefinitionStatus is the status of WorkloadDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    """


    conditions?: [CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonStatusConditionsItems0]


schema CoreOamDevV1beta1ApplicationRevisionSpecWorkloadDefinitionsAnonStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationRevisionStatus:
    """ ApplicationRevisionStatus is the status of ApplicationRevision

    Attributes
    ----------
    succeeded : bool, default is Undefined, required
         Succeeded records if the workflow finished running with success
    workflow : CoreOamDevV1beta1ApplicationRevisionStatusWorkflow, default is Undefined, optional
        workflow
    """


    succeeded: bool

    workflow?: CoreOamDevV1beta1ApplicationRevisionStatusWorkflow


schema CoreOamDevV1beta1ApplicationRevisionStatusWorkflow:
    """ Workflow the running status of the workflow

    Attributes
    ----------
    appRevision : str, default is Undefined, optional
        app revision
    endTime : str, default is Undefined, optional
        end time
    finished : bool, default is Undefined, required
        finished
    message : str, default is Undefined, optional
        message
    mode : str, default is Undefined, required
        mode
    startTime : str, default is Undefined, optional
        start time
    status : str, default is Undefined, optional
         WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
    steps : [CoreOamDevV1beta1ApplicationRevisionStatusWorkflowStepsItems0], default is Undefined, optional
        steps
    suspend : bool, default is Undefined, required
        suspend
    suspendState : str, default is Undefined, optional
        suspend state
    terminated : bool, default is Undefined, required
        terminated
    contextBackend : CoreOamDevV1beta1ApplicationRevisionStatusWorkflowContextBackend, default is Undefined, optional
        context backend
    """


    appRevision?: str

    endTime?: str

    finished: bool

    message?: str

    mode: str

    startTime?: str

    status?: str

    steps?: [CoreOamDevV1beta1ApplicationRevisionStatusWorkflowStepsItems0]

    suspend: bool

    suspendState?: str

    terminated: bool

    contextBackend?: CoreOamDevV1beta1ApplicationRevisionStatusWorkflowContextBackend


schema CoreOamDevV1beta1ApplicationRevisionStatusWorkflowContextBackend:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationRevisionStatusWorkflowStepsItems0:
    """ WorkflowStepStatus record the status of a workflow step, include step status and subStep status

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    subSteps : [CoreOamDevV1beta1ApplicationRevisionStatusWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    subSteps?: [CoreOamDevV1beta1ApplicationRevisionStatusWorkflowStepsItems0SubStepsItems0]

    $type?: str


schema CoreOamDevV1beta1ApplicationRevisionStatusWorkflowStepsItems0SubStepsItems0:
    """ StepStatus record the base status of workflow step, which could be workflow step or subStep

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    $type?: str



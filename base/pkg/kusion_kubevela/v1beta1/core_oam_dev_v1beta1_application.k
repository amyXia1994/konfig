"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis


schema Application:
    """ Application is the Schema for the applications API

    Attributes
    ----------
    apiVersion : str, default is "core.oam.dev/v1beta1", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1ApplicationSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "core.oam.dev/v1beta1" = "core.oam.dev/v1beta1"

    kind: "Application" = "Application"

    metadata?: apis.ObjectMeta

    spec?: CoreOamDevV1beta1ApplicationSpec

    status?: CoreOamDevV1beta1ApplicationStatus


schema CoreOamDevV1beta1ApplicationSpec:
    """ ApplicationSpec is the spec of Application

    Attributes
    ----------
    components : [CoreOamDevV1beta1ApplicationSpecComponentsItems0], default is Undefined, required
        components
    policies : [CoreOamDevV1beta1ApplicationSpecPoliciesItems0], default is Undefined, optional
         Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.
    workflow : CoreOamDevV1beta1ApplicationSpecWorkflow, default is Undefined, optional
        workflow
    """


    components: [CoreOamDevV1beta1ApplicationSpecComponentsItems0]

    policies?: [CoreOamDevV1beta1ApplicationSpecPoliciesItems0]

    workflow?: CoreOamDevV1beta1ApplicationSpecWorkflow


schema CoreOamDevV1beta1ApplicationSpecComponentsItems0:
    """ ApplicationComponent describe the component of application

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
        depends on
    externalRevision : str, default is Undefined, optional
         ExternalRevision specified the component revisionName
    inputs : [CoreOamDevV1beta1ApplicationSpecComponentsItems0InputsItems0], default is Undefined, optional
         StepInputs defines variable input of WorkflowStep
    name : str, default is Undefined, required
        name
    outputs : [CoreOamDevV1beta1ApplicationSpecComponentsItems0OutputsItems0], default is Undefined, optional
         StepOutputs defines output variable of WorkflowStep
    properties : any, default is Undefined, optional
        properties
    scopes : {str:str}, default is Undefined, optional
         scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
    traits : [CoreOamDevV1beta1ApplicationSpecComponentsItems0TraitsItems0], default is Undefined, optional
         Traits define the trait of one component, the type must be array to keep the order.
    $type : str, default is Undefined, required
        type
    """


    dependsOn?: [str]

    externalRevision?: str

    inputs?: [CoreOamDevV1beta1ApplicationSpecComponentsItems0InputsItems0]

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationSpecComponentsItems0OutputsItems0]

    properties?: any

    scopes?: {str:str}

    traits?: [CoreOamDevV1beta1ApplicationSpecComponentsItems0TraitsItems0]

    $type: str


schema CoreOamDevV1beta1ApplicationSpecComponentsItems0InputsItems0:
    """core oam dev v1beta1 application spec components items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationSpecComponentsItems0OutputsItems0:
    """core oam dev v1beta1 application spec components items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationSpecComponentsItems0TraitsItems0:
    """ ApplicationTrait defines the trait of application

    Attributes
    ----------
    properties : any, default is Undefined, optional
        properties
    $type : str, default is Undefined, required
        type
    """


    properties?: any

    $type: str


schema CoreOamDevV1beta1ApplicationSpecPoliciesItems0:
    """ AppPolicy defines a global policy for all components in the app.

    Attributes
    ----------
    name : str, default is Undefined, required
         Name is the unique name of the policy.
    properties : any, default is Undefined, optional
        properties
    $type : str, default is Undefined, required
        type
    """


    name: str

    properties?: any

    $type: str


schema CoreOamDevV1beta1ApplicationSpecWorkflow:
    """ Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark "finish" phase in status.conditions.

    Attributes
    ----------
    ref : str, default is Undefined, optional
        ref
    steps : [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0], default is Undefined, optional
        steps
    mode : CoreOamDevV1beta1ApplicationSpecWorkflowMode, default is Undefined, optional
        mode
    """


    ref?: str

    steps?: [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0]

    mode?: CoreOamDevV1beta1ApplicationSpecWorkflowMode


schema CoreOamDevV1beta1ApplicationSpecWorkflowMode:
    """ WorkflowExecuteMode defines the mode of workflow execution

    Attributes
    ----------
    steps : str, default is Undefined, optional
         Steps is the mode of workflow steps execution
    subSteps : str, default is Undefined, optional
         SubSteps is the mode of workflow sub steps execution
    """


    steps?: str

    subSteps?: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0:
    """ WorkflowStep defines how to execute a workflow step.

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
         DependsOn is the dependency of the step
    $if : str, default is Undefined, optional
         If is the if condition of the step
    inputs : [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0InputsItems0], default is Undefined, optional
         Inputs is the inputs of the step
    meta : CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0Meta, default is Undefined, optional
        meta
    name : str, default is Undefined, required
         Name is the unique name of the workflow step.
    outputs : [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0OutputsItems0], default is Undefined, optional
         Outputs is the outputs of the step
    properties : any, default is Undefined, optional
         Properties is the properties of the step
    subSteps : [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    timeout : str, default is Undefined, optional
         Timeout is the timeout of the step
    $type : str, default is Undefined, required
         Type is the type of the workflow step.
    """


    dependsOn?: [str]

    $if?: str

    inputs?: [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0InputsItems0]

    meta?: CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0Meta

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0OutputsItems0]

    properties?: any

    subSteps?: [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0]

    timeout?: str

    $type: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0InputsItems0:
    """core oam dev v1beta1 application spec workflow steps items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0Meta:
    """ Meta is the meta data of the workflow step.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        alias
    """


    alias?: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0OutputsItems0:
    """core oam dev v1beta1 application spec workflow steps items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0:
    """ WorkflowStepBase defines the workflow step base

    Attributes
    ----------
    dependsOn : [str], default is Undefined, optional
         DependsOn is the dependency of the step
    $if : str, default is Undefined, optional
         If is the if condition of the step
    inputs : [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0InputsItems0], default is Undefined, optional
         Inputs is the inputs of the step
    meta : CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0Meta, default is Undefined, optional
        meta
    name : str, default is Undefined, required
         Name is the unique name of the workflow step.
    outputs : [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0OutputsItems0], default is Undefined, optional
         Outputs is the outputs of the step
    properties : any, default is Undefined, optional
         Properties is the properties of the step
    timeout : str, default is Undefined, optional
         Timeout is the timeout of the step
    $type : str, default is Undefined, required
         Type is the type of the workflow step.
    """


    dependsOn?: [str]

    $if?: str

    inputs?: [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0InputsItems0]

    meta?: CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0Meta

    name: str

    outputs?: [CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0OutputsItems0]

    properties?: any

    timeout?: str

    $type: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0InputsItems0:
    """core oam dev v1beta1 application spec workflow steps items0 sub steps items0 inputs items0

    Attributes
    ----------
    from : str, default is Undefined, required
        from
    parameterKey : str, default is Undefined, required
        parameter key
    """


    from: str

    parameterKey: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0Meta:
    """ Meta is the meta data of the workflow step.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        alias
    """


    alias?: str


schema CoreOamDevV1beta1ApplicationSpecWorkflowStepsItems0SubStepsItems0OutputsItems0:
    """core oam dev v1beta1 application spec workflow steps items0 sub steps items0 outputs items0

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    valueFrom : str, default is Undefined, required
        value from
    """


    name: str

    valueFrom: str


schema CoreOamDevV1beta1ApplicationStatus:
    """ AppStatus defines the observed state of Application

    Attributes
    ----------
    appliedResources : [CoreOamDevV1beta1ApplicationStatusAppliedResourcesItems0], default is Undefined, optional
         AppliedResources record the resources that the  workflow step apply.
    components : [CoreOamDevV1beta1ApplicationStatusComponentsItems0], default is Undefined, optional
         Components record the related Components created by Application Controller
    conditions : [CoreOamDevV1beta1ApplicationStatusConditionsItems0], default is Undefined, optional
         Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
         The generation observed by the application controller.
    policy : [CoreOamDevV1beta1ApplicationStatusPolicyItems0], default is Undefined, optional
         PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
    services : [CoreOamDevV1beta1ApplicationStatusServicesItems0], default is Undefined, optional
         Services record the status of the application services
    status : str, default is Undefined, optional
         ApplicationPhase is a label for the condition of an application at the current time
    latestRevision : CoreOamDevV1beta1ApplicationStatusLatestRevision, default is Undefined, optional
        latest revision
    workflow : CoreOamDevV1beta1ApplicationStatusWorkflow, default is Undefined, optional
        workflow
    """


    appliedResources?: [CoreOamDevV1beta1ApplicationStatusAppliedResourcesItems0]

    components?: [CoreOamDevV1beta1ApplicationStatusComponentsItems0]

    conditions?: [CoreOamDevV1beta1ApplicationStatusConditionsItems0]

    observedGeneration?: int

    policy?: [CoreOamDevV1beta1ApplicationStatusPolicyItems0]

    services?: [CoreOamDevV1beta1ApplicationStatusServicesItems0]

    status?: str

    latestRevision?: CoreOamDevV1beta1ApplicationStatusLatestRevision

    workflow?: CoreOamDevV1beta1ApplicationStatusWorkflow


schema CoreOamDevV1beta1ApplicationStatusAppliedResourcesItems0:
    """ ClusterObjectReference defines the object reference with cluster.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    cluster : str, default is Undefined, optional
        cluster
    creator : str, default is Undefined, optional
        creator
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    cluster?: str

    creator?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationStatusComponentsItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationStatusConditionsItems0:
    """ A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
         LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
         A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
         Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
         Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1ApplicationStatusLatestRevision:
    """ LatestRevision of the application configuration it generates

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
         RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


schema CoreOamDevV1beta1ApplicationStatusPolicyItems0:
    """ PolicyStatus records the status of policy Deprecated

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    status : any, default is Undefined, optional
        status
    $type : str, default is Undefined, required
        type
    """


    name: str

    status?: any

    $type: str


schema CoreOamDevV1beta1ApplicationStatusServicesItems0:
    """ ApplicationComponentStatus record the health status of App component

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        cluster
    env : str, default is Undefined, optional
        env
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    scopes : [CoreOamDevV1beta1ApplicationStatusServicesItems0ScopesItems0], default is Undefined, optional
        scopes
    traits : [CoreOamDevV1beta1ApplicationStatusServicesItems0TraitsItems0], default is Undefined, optional
        traits
    workloadDefinition : CoreOamDevV1beta1ApplicationStatusServicesItems0WorkloadDefinition, default is Undefined, optional
        workload definition
    """


    cluster?: str

    env?: str

    healthy: bool

    message?: str

    name: str

    namespace?: str

    scopes?: [CoreOamDevV1beta1ApplicationStatusServicesItems0ScopesItems0]

    traits?: [CoreOamDevV1beta1ApplicationStatusServicesItems0TraitsItems0]

    workloadDefinition?: CoreOamDevV1beta1ApplicationStatusServicesItems0WorkloadDefinition


schema CoreOamDevV1beta1ApplicationStatusServicesItems0ScopesItems0:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationStatusServicesItems0TraitsItems0:
    """ ApplicationTraitStatus records the trait health status

    Attributes
    ----------
    healthy : bool, default is Undefined, required
        healthy
    message : str, default is Undefined, optional
        message
    $type : str, default is Undefined, required
        type
    """


    healthy: bool

    message?: str

    $type: str


schema CoreOamDevV1beta1ApplicationStatusServicesItems0WorkloadDefinition:
    """ WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    """


    apiVersion: str

    kind: str


schema CoreOamDevV1beta1ApplicationStatusWorkflow:
    """ Workflow record the status of workflow

    Attributes
    ----------
    appRevision : str, default is Undefined, optional
        app revision
    endTime : str, default is Undefined, optional
        end time
    finished : bool, default is Undefined, required
        finished
    message : str, default is Undefined, optional
        message
    mode : str, default is Undefined, required
        mode
    startTime : str, default is Undefined, optional
        start time
    status : str, default is Undefined, optional
         WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
    steps : [CoreOamDevV1beta1ApplicationStatusWorkflowStepsItems0], default is Undefined, optional
        steps
    suspend : bool, default is Undefined, required
        suspend
    suspendState : str, default is Undefined, optional
        suspend state
    terminated : bool, default is Undefined, required
        terminated
    contextBackend : CoreOamDevV1beta1ApplicationStatusWorkflowContextBackend, default is Undefined, optional
        context backend
    """


    appRevision?: str

    endTime?: str

    finished: bool

    message?: str

    mode: str

    startTime?: str

    status?: str

    steps?: [CoreOamDevV1beta1ApplicationStatusWorkflowStepsItems0]

    suspend: bool

    suspendState?: str

    terminated: bool

    contextBackend?: CoreOamDevV1beta1ApplicationStatusWorkflowContextBackend


schema CoreOamDevV1beta1ApplicationStatusWorkflowContextBackend:
    """ ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
         API version of the referent.
    fieldPath : str, default is Undefined, optional
         If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
         Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
         Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
         Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
         Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
         UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CoreOamDevV1beta1ApplicationStatusWorkflowStepsItems0:
    """ WorkflowStepStatus record the status of a workflow step, include step status and subStep status

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    subSteps : [CoreOamDevV1beta1ApplicationStatusWorkflowStepsItems0SubStepsItems0], default is Undefined, optional
        sub steps
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    subSteps?: [CoreOamDevV1beta1ApplicationStatusWorkflowStepsItems0SubStepsItems0]

    $type?: str


schema CoreOamDevV1beta1ApplicationStatusWorkflowStepsItems0SubStepsItems0:
    """ StepStatus record the base status of workflow step, which could be workflow step or subStep

    Attributes
    ----------
    firstExecuteTime : str, default is Undefined, optional
         FirstExecuteTime is the first time this step execution.
    id : str, default is Undefined, required
        id
    lastExecuteTime : str, default is Undefined, optional
         LastExecuteTime is the last time this step execution.
    message : str, default is Undefined, optional
         A human readable message indicating details about why the workflowStep is in this state.
    name : str, default is Undefined, optional
        name
    phase : str, default is Undefined, optional
         WorkflowStepPhase describes the phase of a workflow step.
    reason : str, default is Undefined, optional
         A brief CamelCase message indicating details about why the workflowStep is in this state.
    $type : str, default is Undefined, optional
        type
    """


    firstExecuteTime?: str

    id: str

    lastExecuteTime?: str

    message?: str

    name?: str

    phase?: str

    reason?: str

    $type?: str


